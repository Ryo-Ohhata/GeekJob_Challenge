JSF(Java Server Faces)

概要…JSFはJava EE(Java Platform,Enterprise Edition)という環境で動作する標準的なコンポーネント志向（機能ごとに部品として扱う考え方）のユーザーインターフェイスフレームワークです。JSFはJavaEEに含まれているので、新しくライブラリなどをプロジェクトに追加しなくても使うことができます。
一言でいうとユーザーインターフェイス（ユーザーが操作する見た目の部分）を簡単に作ることができるフレームワークでStruts(ストラッツ)と同じMVCモデルを採用したフレームワークである。
メリット…開発チームとデザインチームで分業できる特徴があり、Strutsに比べて分業が行いやすい特徴があります。
要するに…システム全体のうち見た目に関する部分を提供してくれる。ただ、新しい技術ではないのできれいなかっこいい画面を作ることは難しい。


Play Framework

概要…Play は、現代の web アプリケーション開発に必要なコンポーネント及び API を統合した生産性の高い Java と Scala の web アプリケーションフレームワークです。Play の特徴は、ライトウェイト、ステートレス、web フレンドリーなアーキテクチャであること、機能予測のしやすさです。また、Iteratee IO をベースにしたリアクティブモデルのおかげで、スケーラブルなアプリケーションでも CPU、メモリ、スレッドなどのリソース消費が最小限になっています。
メリット…動作が早く、Javaの基礎的な知識があれば使い始めることができ、アプリを高速に開発できる。
要するに…使いやすくて開発しやすいことに主眼が置かれたフレームワークです。


Spring Framework

概要…スプリングフレームワークは近代的なJavaの業務アプリ開発の包括的なプログラミング環境を供給します。
メリット…汎用性が高く様々なシステム構築に対応可能。
要するに…カバーしている範囲がとても広い万能型フレームワークです。